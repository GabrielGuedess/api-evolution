generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  relationMode = "prisma"
  url          = env("DATABASE_URL")
}

model Client {
  id              String          @id @default(uuid())
  email           String          @unique
  username        String          @unique
  avatar          String?
  password        String
  name            String
  lastname        String
  cpf             String
  cellphone       String
  date            DateTime
  cep             String
  logradouro      String
  numero          String
  complemento     String
  referencia      String
  bairro          String
  cidade          String
  UF              String
  id_customer     String
  order           Order[]
  games_favorites Game_Favorite[]

  @@map("clients")
}

model Game_Favorite {
  id        String @id @default(uuid())
  client    Client @relation(fields: [client_id], references: [id])
  client_id String @unique
  games     Game[]

  @@map("games_favorites")
}

model Order {
  id                String   @id @default(uuid())
  payment_intent_id String
  total_in_cents    Int
  card_brand        String
  card_last4        String
  client            Client   @relation(fields: [client_id], references: [id])
  client_id         String
  games             Game[]
  created_at        DateTime @default(now())

  @@map("orders")
}

model Game {
  id              String          @id @default(uuid())
  name            String          @unique
  slug            String          @unique
  release_date    DateTime
  score           Decimal
  video           String?
  image           String
  primary_color   String
  background      String
  description     String
  price           Float
  order           Order[]
  games_favorites Game_Favorite[]
  genres          Genre[]
  games_gallery   Game_Gallery[]
  developers      Developer[]
  platforms       Platform[]
  pc_system       PcSystem?

  @@map("games")
}

model Genre {
  id    String @id @default(uuid())
  name  String @unique
  slug  String
  games Game[]

  @@map("genres")
}

model Game_Gallery {
  id        String @id @default(uuid())
  src       String @unique
  alt       String
  image_fit String
  width     Float
  height    Float
  type      String
  game_id   Game   @relation(fields: [games_id], references: [id])
  games_id  String

  @@map("games_gallery")
}

model Developer {
  id    String @id @default(uuid())
  name  String @unique
  slug  String
  games Game[]

  @@map("developers")
}

model Platform {
  id    String @id @default(uuid())
  name  String @unique
  slug  String
  games Game[]

  @@map("platforms")
}

model PcSystem {
  id          String       @id @default(uuid())
  game        Game         @relation(fields: [game_id], references: [id])
  game_id     String       @unique
  minimal     Minimal?
  recommended Recommended?

  @@map("pc_system")
}

model Minimal {
  id           String    @id @default(uuid())
  so           String
  cpu          String
  memory       String
  gpu          String
  hd           String
  pc_system    PcSystem? @relation(fields: [pc_system_id], references: [id])
  pc_system_id String?   @unique

  @@map("minimal")
}

model Recommended {
  id           String    @id @default(uuid())
  so           String
  cpu          String
  memory       String
  gpu          String
  hd           String
  pc_system    PcSystem? @relation(fields: [pc_system_id], references: [id])
  pc_system_id String?   @unique

  @@map("recommended")
}
